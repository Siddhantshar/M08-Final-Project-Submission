import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;
import java.time.LocalDate;
import java.util.HashMap;
import java.util.Map;
import java.util.ArrayList;
import java.util.List;

// Student Class
class Student {
    private String studentID;
    private String firstName;
    private String lastName;
    private LocalDate dateOfBirth;
    private Map<String, List<Grade>> grades;

    public Student(String studentID, String firstName, String lastName, LocalDate dateOfBirth) {
        this.studentID = studentID;
        this.firstName = firstName;
        this.lastName = lastName;
        this.dateOfBirth = dateOfBirth;
        this.grades = new HashMap<>();
    }

    public void addGrade(String subject, Grade grade) {
        if (!grades.containsKey(subject)) {
            grades.put(subject, new ArrayList<>());
        }
        grades.get(subject).add(grade);
    }

    public List<Grade> getGrades(String subject) {
        return grades.get(subject);
    }
}

// Grade Class
class Grade {
    private String evaluationName;
    private String evaluationType; // e.g., "Homework", "Quiz", "Exam"
    private double score;
    private double maximumScore;
    private LocalDate assessmentDate;

    public Grade(String evaluationName, String evaluationType, double score, double maximumScore, LocalDate assessmentDate) {
        this.evaluationName = evaluationName;
        this.evaluationType = evaluationType;
        this.score = score;
        this.maximumScore = maximumScore;
        this.assessmentDate = assessmentDate;
    }
}

// Main Application Class
public class GradebookApp extends Application {

    private Map<String, Student> students = new HashMap<>();

    @Override
    public void start(Stage primaryStage) {
        primaryStage.setTitle("Student Gradebook System");

        VBox menu = new VBox();
        Button btnAddStudent = new Button("Add New Student");
        Button btnTrackGrades = new Button("Monitor Grades");

        menu.getChildren().addAll(btnAddStudent, btnTrackGrades);

        btnAddStudent.setOnAction(e -> showAddStudentScreen(primaryStage));
        btnTrackGrades.setOnAction(e -> showTrackGradesScreen(primaryStage));

        Scene scene = new Scene(menu, 300, 250);
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    private void showAddStudentScreen(Stage primaryStage) {
        GridPane grid = new GridPane();

        Label lblStudentID = new Label("Student ID:");
        TextField txtStudentID = new TextField();
        Label lblFirstName = new Label("First Name:");
        TextField txtFirstName = new TextField();
        Label lblLastName = new Label("Last Name:");
        TextField txtLastName = new TextField();
        Label lblDOB = new Label("Date of Birth:");
        TextField txtDOB = new TextField();
        Button btnAdd = new Button("Add Student");

        grid.add(lblStudentID, 0, 0);
        grid.add(txtStudentID, 1, 0);
        grid.add(lblFirstName, 0, 1);
        grid.add(txtFirstName, 1, 1);
        grid.add(lblLastName, 0, 2);
        grid.add(txtLastName, 1, 2);
        grid.add(lblDOB, 0, 3);
        grid.add(txtDOB, 1, 3);
        grid.add(btnAdd, 1, 4);

        btnAdd.setOnAction(e -> {
            String studentID = txtStudentID.getText();
            String firstName = txtFirstName.getText();
            String lastName = txtLastName.getText();
            LocalDate dob = LocalDate.parse(txtDOB.getText());
            Student student = new Student(studentID, firstName, lastName, dob);
            students.put(studentID, student);
        });

        Scene scene = new Scene(grid, 300, 200);
        primaryStage.setScene(scene);
    }

    private void showTrackGradesScreen(Stage primaryStage) {
        GridPane grid = new GridPane();

        Label lblStudentID = new Label("Student ID:");
        TextField txtStudentID = new TextField();
        Button btnTrack = new Button("Track Grades");

        grid.add(lblStudentID, 0, 0);
        grid.add(txtStudentID, 1, 0);
        grid.add(btnTrack, 1, 1);

        btnTrack.setOnAction(e -> {
            String studentID = txtStudentID.getText();
            Student student = students.get(studentID);
            if (student != null) {
                List<Grade> grades = student.getGrades("Math"); // Example subject
                // Display grades (this can be enhanced further)
                for (Grade grade : grades) {
                    System.out.println(grade.evaluationName + ": " + grade.score);
                }
            }
        });

        Scene scene = new Scene(grid, 300, 200);
        primaryStage.setScene(scene);
    }

    public static void main(String[] args) {
        launch(args);
    }
}
